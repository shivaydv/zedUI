{
  "name": "faq",
  "type": "registry:component",
  "title": "FAQ",
  "description": "A FAQ component.",
  "dependencies": [
    "motion"
  ],
  "files": [
    {
      "type": "registry:component",
      "content": "\"use client\";\r\n\r\nimport { useState, useRef } from \"react\";\r\nimport { motion, AnimatePresence } from \"motion/react\";\r\nimport { ChevronDown } from \"lucide-react\";\r\nimport { cn } from \"@/src/lib/utils\";\r\n\r\nexport interface FAQItem {\r\n  question: string;\r\n  answer: string;\r\n}\r\n\r\ninterface FAQListProps {\r\n  items: FAQItem[];\r\n  className?: string;\r\n  stagger?: boolean;\r\n  delay?: number;\r\n  animated?: boolean;\r\n}\r\n\r\nexport function FAQList({\r\n  items,\r\n  className,\r\n  stagger = true,\r\n  delay,\r\n  animated,\r\n}: FAQListProps) {\r\n  const ref = useRef(null);\r\n\r\n  return (\r\n    <div ref={ref} className={cn(\"space-y-2 w-full  \", className)}>\r\n      {items.map((item, index) => (\r\n        <SingleFAQItem\r\n          key={index}\r\n          question={item.question}\r\n          answer={item.answer}\r\n          index={index}\r\n          delay={stagger ? delay : 0} // Use stagger delay if enabled\r\n          animated={animated} // Pass stagger prop to control animation\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SingleFAQItem({\r\n  question,\r\n  answer,\r\n  index,\r\n  delay = 0.15,\r\n  animated = true,\r\n}: FAQItem & { index: number; delay?: number; animated?: boolean }) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  return (\r\n    <motion.div\r\n      initial={animated ? { opacity: 0, y: 10 } : false}\r\n      animate={animated ? { opacity: 1, y: 0 } : false}\r\n      transition={\r\n        animated\r\n          ? {\r\n              duration: 0.3,\r\n              delay: index * delay,\r\n              ease: \"easeOut\",\r\n            }\r\n          : undefined\r\n      }\r\n      className={cn(\r\n        \"group rounded-lg border border-border \",\r\n        \"transition-colors duration-200 ease-in-out\",\r\n        isOpen ? \"bg-card/30 shadow-sm\" : \"hover:bg-card/50\"\r\n      )}\r\n    >\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => setIsOpen(!isOpen)}\r\n        className=\"flex w-full items-center justify-between gap-4 px-6 py-4 \"\r\n      >\r\n        <h3\r\n          className={cn(\r\n            \"text-left text-base font-medium transition-colors duration-200 \",\r\n            \"text-foreground/80\",\r\n            isOpen && \"text-foreground\"\r\n          )}\r\n        >\r\n          {question}\r\n        </h3>\r\n        <motion.div\r\n          animate={{\r\n            rotate: isOpen ? 180 : 0,\r\n            scale: isOpen ? 1.1 : 1,\r\n          }}\r\n          transition={{ duration: 0.3, ease: \"easeInOut\" }}\r\n          className={cn(\r\n            \"shrink-0 rounded-full p-0.5 \",\r\n            \"transition-colors duration-200\",\r\n            isOpen ? \"text-primary\" : \"text-muted-foreground\"\r\n          )}\r\n        >\r\n          <ChevronDown className=\"h-4 w-4\" />\r\n        </motion.div>\r\n      </button>\r\n\r\n      <AnimatePresence initial={false}>\r\n        {isOpen && (\r\n          <motion.div\r\n            initial={{ height: 0, opacity: 0 }}\r\n            animate={{\r\n              height: \"auto\",\r\n              opacity: 1,\r\n              transition: {\r\n                height: { duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] },\r\n                opacity: { duration: 0.25, delay: 0.1 },\r\n              },\r\n            }}\r\n            exit={{\r\n              height: 0,\r\n              opacity: 0,\r\n              transition: {\r\n                height: { duration: 0.3, ease: \"easeInOut\" },\r\n                opacity: { duration: 0.25 },\r\n              },\r\n            }}\r\n            className=\"\"\r\n          >\r\n            <div className=\"border-t border-border/40 px-6 pb-4 pt-2\">\r\n              <motion.p\r\n                initial={{ y: -8, opacity: 0 }}\r\n                animate={{ y: 0, opacity: 1 }}\r\n                exit={{ y: -8, opacity: 0 }}\r\n                transition={{ duration: 0.3, ease: \"easeOut\" }}\r\n                className=\"text-sm leading-relaxed text-muted-foreground\"\r\n              >\r\n                {answer}\r\n              </motion.p>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </motion.div>\r\n  );\r\n}\r\n",
      "path": "/zedUI/FAQ.tsx",
      "target": "components/FAQ.tsx"
    }
  ]
}